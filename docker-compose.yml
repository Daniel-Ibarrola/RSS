version: "3"
services:

  rss-api:
    build:
      context: ./services/cap-api
      dockerfile: Dockerfile
    image: rss-api-dev:latest
    container_name: rss-api
    command: >
      sh -c "
        flask wait-for-db &&
        flask db upgrade &&
        flask run --host=0.0.0.0 --port=80"
    environment:
      - FLASK_APP=alerts/app.py
      - FLASK_DEBUG=1
      - DB_HOST=postgres
      - DB_PASSWORD=abc123
      - PYTHONUNBUFFERED=1
      - API_HOST=rss-api
      - API_USER=triton
      - API_PASSWORD=dog
      - CONFIG=dev
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/" ]
      interval: 1m
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
    ports:
      - "5000:80"
    volumes:
      - ./services/cap-api/src:/src
      - ./services/cap-api/tests:/tests

  postgres:
    image: postgres:15.2-alpine
    container_name: rss-db
    environment:
      # Note user and db name will be the same
      - POSTGRES_USER=rss
      - POSTGRES_PASSWORD=abc123
    ports:
      - "54321:5432"

  rss-client:
    stdin_open: true
    build:
      context: ./services/client
      dockerfile: Dockerfile
    image: rss-client-dev:latest
    container_name: rss-client
    volumes:
      - ./services/client/src:/app/src
      - ./services/client/test:/app/tests
      - ./services/client/node_modules:/app/node_modules
      - ./services/client/vite.config.js:/app/vite.config.js
    ports:
      - "5173:5173"
    env_file:
      - services/client/.env

  cap-generator:
    build:
      context: ./services/cap-gen
      dockerfile: Dockerfile
    image: cap-gen-dev:latest
    container_name: cap-generator
    environment:
      - CONFIG=dev
      - API_URL=http://rss-api
      - API_USER=triton
      - API_PASSWORD=dog
      - CLIENT_IP=alerts-server
      - CLIENT_PORT=12250
    entrypoint: [
      "python",
      "/src/capgen/main.py"
    ]
    volumes:
      - ./services/cap-gen/src:/src
      - ./services/cap-gen/tests:/tests
      - ./services/cap-gen/feeds:/feeds

  alerts-server:
    build:
      context: ./services/cap-gen
      dockerfile: Dockerfile
    image: cap-gen-dev:latest
    container_name: cap-server
    environment:
      - CONFIG=dev
      - CLIENT_IP=alerts-server
      - CLIENT_PORT=12250
    entrypoint: [
      "python",
      "/src/capgen/utils/server.py"
    ]
    volumes:
        - ./services/cap-gen/src:/src
